name: Supabase Keepalive

on:
  schedule:
    # Runs every 30 minutes
    - cron: '*/30 * * * *'
  workflow_dispatch: {}

jobs:
  ping:
    runs-on: ubuntu-latest
    steps:
      - name: Ping KEEPALIVE_URL (recommended: Supabase Edge Function)
        env:
          KEEPALIVE_URL: ${{ secrets.KEEPALIVE_URL }}
        run: |
          if [ -z "$KEEPALIVE_URL" ]; then
            echo "KEEPALIVE_URL secret is not set."
            echo "Set a URL that hits your Supabase project (e.g., an Edge Function 'heartbeat')."
            exit 1
          fi

          echo "Pinging $KEEPALIVE_URL"
          # Use --fail to make the step fail on 4xx/5xx; short timeout to be gentle
          curl --silent --show-error --fail --max-time 20 --retry 2 --retry-delay 5 "$KEEPALIVE_URL" > /dev/null
          echo "Ping succeeded"

      - name: Optional: ping PostgREST OpenAPI as fallback (requires SUPABASE_URL + SUPABASE_ANON_KEY)
        if: failure() # only try if the first step failed
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        run: |
          if [ -z "$SUPABASE_URL" ] || [ -z "$SUPABASE_ANON_KEY" ]; then
            echo "SUPABASE_URL/SUPABASE_ANON_KEY not set; skipping fallback."
            exit 1
          fi

          echo "Attempting fallback ping to PostgREST OpenAPI"
          # This queries the OpenAPI schema endpoint. It may be disabled in some projects; if so, ignore.
          curl --silent --show-error --fail --max-time 20 \
            -H "apikey: $SUPABASE_ANON_KEY" \
            -H "Authorization: Bearer $SUPABASE_ANON_KEY" \
            -H "Accept: application/openapi+json" \
            "$SUPABASE_URL/rest/v1/" > /dev/null
          echo "Fallback ping succeeded"
